<launch>
  <!-- 1) Simulated time -->
  <param name="/use_sim_time" value="true"/>

  <!-- 2) TF broadcaster (odom → base_link) -->
  <node pkg="second_project" type="tf_broadcaster"
        name="tf_broadcaster" output="screen"/>

  <!-- 3) Static transforms base_link → body & wheels -->
  <node pkg="tf" type="static_transform_publisher" name="body_tf"
        args="0 0 0 0 0 0 base_link body_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="fl_steer_tf"
        args="0.27 0.20 0 0 0 0 base_link front_left_steer_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="fl_wheel_tf"
        args="0.27 0.20 0 0 0 0 base_link front_left_wheel_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="fr_steer_tf"
        args="0.27 -0.20 0 0 0 0 base_link front_right_steer_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="fr_wheel_tf"
        args="0.27 -0.20 0 0 0 0 base_link front_right_wheel_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="rl_steer_tf"
        args="-0.27 0.20 0 0 0 0 base_link rear_left_steer_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="rl_wheel_tf"
        args="-0.27 0.20 0 0 0 0 base_link rear_left_wheel_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="rr_steer_tf"
        args="-0.27 -0.20 0 0 0 0 base_link rear_right_steer_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="rr_wheel_tf"
        args="-0.27 -0.20 0 0 0 0 base_link rear_right_wheel_link 100"/>

  <!-- 4) Stage simulator -->
  <node pkg="stage_ros" type="stageros" name="stage" output="screen"
        args="$(find second_project)/worlds/second_project.world"/>

  <!-- 4.1) Static transform map → odom -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom"
        args="0 0 0 0 0 0 map odom 100"/>

  <!-- 5) Map server -->
  <node pkg="map_server" type="map_server" name="map_server" output="screen"
        args="$(find second_project)/maps/map.yaml"/>

  <!-- 6) Carica i plugin di costmap (static, obstacle, inflation) -->
  <rosparam file="$(find second_project)/config/costmap_common_params.yaml"
            command="load" ns="global_costmap"/>

  <!-- 7) move_base (parametri nel suo namespace privato) -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
    <rosparam file="$(find second_project)/config/move_base.yaml" command="load"/>
  </node>

  <!-- 8) Publisher di goal da CSV -->
  <node pkg="second_project" type="goal_publisher" name="goal_publisher" output="screen">
    <param name="csv_file" value="$(find second_project)/csv/goals.csv"/>
  </node>

  <!-- 9) RViz per navigazione -->
  <node pkg="rviz" type="rviz" name="rviz_nav" output="screen"
        args="-d $(find second_project)/rviz/navigation.rviz"/>
</launch>
